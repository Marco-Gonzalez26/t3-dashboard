// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Paciente {
  id          String  @id @default(auto()) @map("_id") @db.ObjectId
  nombre      String
  telefono    String
  edad        Int
  email       String
  nacimiento  String
  direccion   String
  talla       String
  peso        Int
  pa          String
  fc          String
  satO2       String
  promPa      String? 
  promFc      String?
  ttoActual   String?
  primeraCita DateTime?
  control     DateTime?
  user        User   @relation(fields: [userId], references: [id])
  userId      String @db.ObjectId
}

// Necessary for Next auth
model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  name          String?
  email         String?    @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  pacientes     Paciente[]
  citas         Citas[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  id String @id @default(auto()) @map("_id") @db.ObjectId

  @@unique([identifier, token])
}

model Citas {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  titulo String
  hora DateTime
  fecha DateTime
  user        User   @relation(fields: [userId], references: [id])
  userId      String @db.ObjectId
}